// Code generated by mockery v2.33.0. DO NOT EDIT.

package repomocks

import (
	context "context"
	model "my-project/domain/model"

	mock "github.com/stretchr/testify/mock"
)

// IPerson is an autogenerated mock type for the IPerson type
type IPerson struct {
	mock.Mock
}

// GetByName provides a mock function with given fields: ctx, name
func (_m *IPerson) GetByName(ctx context.Context, name string) (model.Person, error) {
	ret := _m.Called(ctx, name)

	var r0 model.Person
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (model.Person, error)); ok {
		return rf(ctx, name)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) model.Person); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Get(0).(model.Person)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIPerson creates a new instance of IPerson. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIPerson(t interface {
	mock.TestingT
	Cleanup(func())
}) *IPerson {
	mock := &IPerson{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
